// Programa gestión avión

#include <stdio.h>
#include <ctype.h>

const int Numfilas = 10;
const int Asientosfila = 6;
const int Pasillo = Asientosfila/2;

typedef enum TipoEstado {vacio, ocupado, reserva};
typedef TipoEstado TipoOcupado[Asientosfila];
typedef struct TipoFila
{
  TipoOcupado asientosOcupados;
  int juntas;
  int juntasP;
};
typedef TipoFila TipoPlazas[NumFilas];
//Muestra ocupación
void PrintaPlazas(const TipoPlazas P)
{
  const char DibujoAsiento[3]={' ', '*', 'R'};
  print("\n     A   B   C      D   E   F\n\n");
  for (int i=0;i<Numfilas;i++)
  {
    print("%3d",i+1);
    for(int j=0;j<Asientosfila;j++)
    {
      if (j==Pasillo)
      {
        printf("   ");
      }
      printf(" (%c)", DibujoAsiento[P[i].asientosOcupados[j]]);
    }
    printf("\n");
  }
  printf("\n");
}

void ImprimirTarjeta (int fila, int asiento)
{
  printf(".----------------------------.\n");
  printf("|     TARJETA DE EMBARQUE    |\n");
  printf("|  Fila :%3d,fila);
  printf("  Asiento :%3c   |\n", asiento);
  printf("'----------------------------'\n"
}

// Calcula número y posición de plazas contiguas
void CalcularPlazasJuntas (TipoFila & fila)
{
  int juntas=0;
  int juntasP=0;

  fila.juntas=0;
  fila.juntasP=0;
  for(int j=0;j<AdientosFila;j++)
  {
    if(j==Pasillo)
    {
      juntas=0
    }
    if (fila.asientosOcupados[j]==vacio)
    {
      juntas++;
      juntasP++;
      if (juntas>fila.juntas)
      {
        fila.juntas=juntas;
        fila.desde=j-juntas+1;
      }
      if (juntasP>fila.juntasP)
      {
        fila.juntasP=juntasP;
        fila.desdeP=j-juntasP+1;
      }
    }
    else
    {
      juntas=0;
      juntasP=0;
    }
  }
}
